#pragma once

#include <memory>

#include "cell.h"
#include "size.h"

// Интерфейс таблицы
class ISheet {
public:
  virtual ~ISheet() = default;

  // Задаёт содержимое ячейки. Если текст начинается со знака "=", то он
  // интерпретируется как формула. Если задаётся синтаксически некорректная
  // формула, то бросается исключение FormulaException и значение ячейки не
  // изменяется. Если задаётся формула, которая приводит к циклической
  // зависимости (в частности, если формула использует текущую ячейку), то
  // бросается исключение CircularDependencyException и значение ячейки не
  // изменяется.
  // Уточнения по записи формулы:
  // * Если текст содержит только символ "=" и больше ничего, то он не считается
  // формулой
  // * Если текст начинается с символа "'" (апостроф), то при выводе значения
  // ячейки методом GetValue() он опускается. Можно использовать, если нужно
  // начать текст со знака "=", но чтобы он не интерпретировался как формула.
  virtual void SetCell(Position pos, std::string text) = 0;

  // Возвращает значение ячейки.
  // Если ячейка пуста, может вернуть nullptr.
  virtual const ICell* GetCell(Position pos) const = 0;
  virtual ICell* GetCell(Position pos) = 0;

  // Очищает ячейку.
  // Последующий вызов GetCell() для этой ячейки вернёт либо nullptr, либо
  // объект с пустым текстом.
  virtual void ClearCell(Position pos) = 0;

  // Вставляет заданное число пустых строк/столбцов перед строкой/столбцом с
  // заданным индексом. Все ссылки из формул обновляются таким образом, чтобы
  // указывать на те же ячейки, что и до вставки.
  // Если вставка привела бы к тому, что какие-то ячейки получат позиции больше
  // максимальной, или индексы ячеек в каких-то формулах вылезут за максимально
  // допустимые, то бросается исключение TableTooBigException и содержимое
  // таблицы не изменяется.
  virtual void InsertRows(int before, int count = 1) = 0;
  virtual void InsertCols(int before, int count = 1) = 0;

  // Удаляет заданное число пустых строк/столбцов, начиная со строки/столбца с
  // заданным индексом. Все ссылки из формул обновляются таким образом, чтобы
  // указывать на те же ячейки, что и до удаления.
  virtual void DeleteRows(int first, int count = 1) = 0;
  virtual void DeleteCols(int first, int count = 1) = 0;

  // Вычисляет размер области, которая участвует в печати.
  // Определяется как ограничивающий прямоугольник всех ячеек с непустым
  // текстом.
  virtual Size GetPrintableSize() const = 0;

  // Выводит всю таблицу в переданный поток. Столбцы разделяются знаком
  // табуляции. После каждой строки выводится символ перевода строки. Для
  // преобразования ячеек в строку используются методы GetValue() или GetText()
  // соответственно. Пустая ячейка представляется пустой строкой в любом случае.
  virtual void PrintValues(std::ostream& output) const = 0;
  virtual void PrintTexts(std::ostream& output) const = 0;
};

// Создаёт готовую к работе пустую таблицу.
std::unique_ptr<ISheet> CreateSheet();